/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RpcGo, RpcGoInterface } from "../RpcGo";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "LogData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OwnerWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "RevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAccountsBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRemainingBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052655af3107a400060055534801561001a57600080fd5b50600480546001600160a01b0319163317905561138f8061003c6000396000f3fe6080604052600436106100865760003560e01c806393423e9c1161005957806393423e9c14610109578063b91d53c614610129578063c64274741461013e578063d0e30db014610151578063da76d5cd1461015957600080fd5b80634311de8f1461008b578063597c1b23146100a25780638ed8249c146100c957806391691873146100e9575b600080fd5b34801561009757600080fd5b506100a0610179565b005b3480156100ae57600080fd5b506100b761028a565b60405190815260200160405180910390f35b3480156100d557600080fd5b506100a06100e4366004611000565b610434565b3480156100f557600080fd5b506100a0610104366004611031565b61053c565b34801561011557600080fd5b506100b761012436600461105d565b6107d7565b34801561013557600080fd5b506100a0610863565b6100a061014c366004611097565b6109fd565b6100a0610d4d565b34801561016557600080fd5b506100a0610174366004611000565b610e44565b6004546001600160a01b031633146101ac5760405162461bcd60e51b81526004016101a390611164565b60405180910390fd5b4760006101b761028a565b905060006101c582846111bb565b9050600081116102175760405162461bcd60e51b815260206004820181905260248201527f4e6f2072656d61696e696e672062616c616e636520746f20776974686472617760448201526064016101a3565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610251573d6000803e3d6000fd5b506040518181527fa20809e697380eaea0fd13bf4d14b00e2ef29559ef361501189d3be2e9b0ec859060200160405180910390a1505050565b600080805b604051636f59ec4b60e11b81526000600482015273__$28d2455bd764ba806e1ab599ce1a0785f1$__9063deb3d89690602401602060405180830381865af41580156102df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030391906111ce565b81101561042e576040516368d54f3f60e11b8152600060048201819052602482018390529073__$28d2455bd764ba806e1ab599ce1a0785f1$__9063d1aa9e7e90604401602060405180830381865af4158015610364573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038891906111e7565b60405163732a2ccf60e01b8152600060048201526001600160a01b038216602482015290915073__$28d2455bd764ba806e1ab599ce1a0785f1$__9063732a2ccf90604401602060405180830381865af41580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e91906111ce565b6104189084611204565b925050808061042690611217565b91505061028f565b50919050565b6004546001600160a01b0316331461045e5760405162461bcd60e51b81526004016101a390611164565b47600061046961028a565b9050600061047782846111bb565b90508084106104c85760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682066756e647320746f2077697468647261770000000060448201526064016101a3565b6004546040516001600160a01b039091169085156108fc029086906000818181858888f19350505050158015610502573d6000803e3d6000fd5b506040518481527fa20809e697380eaea0fd13bf4d14b00e2ef29559ef361501189d3be2e9b0ec859060200160405180910390a150505050565b6000811161057d5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b60448201526064016101a3565b60405163732a2ccf60e01b81526000600482018190523360248301529073__$28d2455bd764ba806e1ab599ce1a0785f1$__9063732a2ccf90604401602060405180830381865af41580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa91906111ce565b60405163732a2ccf60e01b81526000600482018190526001600160a01b038616602483015291925073__$28d2455bd764ba806e1ab599ce1a0785f1$__9063732a2ccf90604401602060405180830381865af415801561065e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068291906111ce565b9050828210156106a45760405162461bcd60e51b81526004016101a390611230565b73__$28d2455bd764ba806e1ab599ce1a0785f1$__63bc2b405c6000336106cb87876111bb565b6040518463ffffffff1660e01b81526004016106e99392919061125e565b60006040518083038186803b15801561070157600080fd5b505af4158015610715573d6000803e3d6000fd5b5073__$28d2455bd764ba806e1ab599ce1a0785f1$__925063bc2b405c915060009050866107438786611204565b6040518463ffffffff1660e01b81526004016107619392919061125e565b60006040518083038186803b15801561077957600080fd5b505af415801561078d573d6000803e3d6000fd5b50506040518581526001600160a01b03871692503391507fd69be2ad0df9902412768a47559f760396739fe2ccb5c9ebc1e575bdce44c69a9060200160405180910390a350505050565b60405163732a2ccf60e01b81526000600482018190526001600160a01b03831660248301529073__$28d2455bd764ba806e1ab599ce1a0785f1$__9063732a2ccf90604401602060405180830381865af4158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d91906111ce565b92915050565b60405163732a2ccf60e01b81526000600482018190523360248301529073__$28d2455bd764ba806e1ab599ce1a0785f1$__9063732a2ccf90604401602060405180830381865af41580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e091906111ce565b90506000811161092b5760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b60448201526064016101a3565b604051632f0ad01760e21b815273__$28d2455bd764ba806e1ab599ce1a0785f1$__9063bc2b405c90610967906000903390829060040161125e565b60006040518083038186803b15801561097f57600080fd5b505af4158015610993573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f193505050501580156109c4573d6000803e3d6000fd5b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250565b60405163732a2ccf60e01b8152600060048201819052336024830152349173__$28d2455bd764ba806e1ab599ce1a0785f1$__9063732a2ccf90604401602060405180830381865af4158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b91906111ce565b9050600554821115610b1657600554610a9490836111bb565b9150600073__$28d2455bd764ba806e1ab599ce1a0785f1$__63bc2b405c90913360055485610ac39190611204565b6040518463ffffffff1660e01b8152600401610ae19392919061125e565b60006040518083038186803b158015610af957600080fd5b505af4158015610b0d573d6000803e3d6000fd5b50505050610bb4565b600554811015610b385760405162461bcd60e51b81526004016101a390611230565b600073__$28d2455bd764ba806e1ab599ce1a0785f1$__63bc2b405c90913360055485610b6591906111bb565b6040518463ffffffff1660e01b8152600401610b839392919061125e565b60006040518083038186803b158015610b9b57600080fd5b505af4158015610baf573d6000803e3d6000fd5b505050505b7fe33eb0896a1b189f05b8c6d69ce71e4db20a0f91fc82ae4d6384ad76ba6e558083604051610be391906112cd565b60405180910390a1600080866001600160a01b03168686604051610c0791906112e0565b60006040518083038185875af1925050503d8060008114610c44576040519150601f19603f3d011682016040523d82523d6000602084013e610c49565b606091505b509150915081610cf75760408051808201909152601081526f2737903932bb32b93a103932b0b9b7b760811b60208201528151604411610c895750600481015b7f3c4b96f0117ea792d5c26cf00a23b93d220325ef34e352d05103b1971c8cb54c81604051610cb891906112cd565b60405180910390a180604051602001610cd191906112fc565b60408051601f198184030181529082905262461bcd60e51b82526101a3916004016112cd565b866001600160a01b0316336001600160a01b03167fab7bccecddf9b5629e0d45e9fcc3c9d353ae417ddb20dd83eb7c9fe71725de478888604051610d3c929190611338565b60405180910390a350505050505050565b60405163732a2ccf60e01b81526000600482018190523360248301529073__$28d2455bd764ba806e1ab599ce1a0785f1$__9063732a2ccf90604401602060405180830381865af4158015610da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dca91906111ce565b905073__$28d2455bd764ba806e1ab599ce1a0785f1$__63bc2b405c600033610df33486611204565b6040518463ffffffff1660e01b8152600401610e119392919061125e565b60006040518083038186803b158015610e2957600080fd5b505af4158015610e3d573d6000803e3d6000fd5b5050505050565b60008111610e855760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b60448201526064016101a3565b60405163732a2ccf60e01b81526000600482018190523360248301529073__$28d2455bd764ba806e1ab599ce1a0785f1$__9063732a2ccf90604401602060405180830381865af4158015610ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0291906111ce565b905081811015610f245760405162461bcd60e51b81526004016101a390611230565b73__$28d2455bd764ba806e1ab599ce1a0785f1$__63bc2b405c600033610f4b86866111bb565b6040518463ffffffff1660e01b8152600401610f699392919061125e565b60006040518083038186803b158015610f8157600080fd5b505af4158015610f95573d6000803e3d6000fd5b505060405133925084156108fc02915084906000818181858888f19350505050158015610fc6573d6000803e3d6000fd5b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b60006020828403121561101257600080fd5b5035919050565b6001600160a01b038116811461102e57600080fd5b50565b6000806040838503121561104457600080fd5b823561104f81611019565b946020939093013593505050565b60006020828403121561106f57600080fd5b813561107a81611019565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156110ac57600080fd5b83356110b781611019565b925060208401359150604084013567ffffffffffffffff808211156110db57600080fd5b818601915086601f8301126110ef57600080fd5b81358181111561110157611101611081565b604051601f8201601f19908116603f0116810190838211818310171561112957611129611081565b8160405282815289602084870101111561114257600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561085d5761085d6111a5565b6000602082840312156111e057600080fd5b5051919050565b6000602082840312156111f957600080fd5b815161107a81611019565b8082018082111561085d5761085d6111a5565b600060018201611229576112296111a5565b5060010190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b9283526001600160a01b03919091166020830152604082015260600190565b60005b83811015611298578181015183820152602001611280565b50506000910152565b600081518084526112b981602086016020860161127d565b601f01601f19169290920160200192915050565b60208152600061107a60208301846112a1565b600082516112f281846020870161127d565b9190910192915050565b7302a3930b739b0b1ba34b7b7103330b4b632b21d160651b81526000825161132b81601485016020870161127d565b9190910160140192915050565b82815260406020820152600061135160408301846112a1565b94935050505056fea2646970667358221220332e5dbfac2b237eba13dcbe1e1883fd9cd721756b3948414f4641db1a9df69864736f6c63430008130033";

type RpcGoConstructorParams =
  | [linkLibraryAddresses: RpcGoLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RpcGoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RpcGo__factory extends ContractFactory {
  constructor(...args: RpcGoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, RpcGo__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: RpcGoLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$28d2455bd764ba806e1ab599ce1a0785f1\\$__", "g"),
      linkLibraryAddresses["contracts/RpcGo.sol:IterableMapping"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RpcGo> {
    return super.deploy(overrides || {}) as Promise<RpcGo>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RpcGo {
    return super.attach(address) as RpcGo;
  }
  connect(signer: Signer): RpcGo__factory {
    return super.connect(signer) as RpcGo__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RpcGoInterface {
    return new utils.Interface(_abi) as RpcGoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RpcGo {
    return new Contract(address, _abi, signerOrProvider) as RpcGo;
  }
}

export interface RpcGoLibraryAddresses {
  ["contracts/RpcGo.sol:IterableMapping"]: string;
}
