type ExecuteTransaction @entity(immutable: true) {
  id: Bytes!
  from: UserProfile! # User's address
  to: Bytes! # address
  value: BigInt! # uint256
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserProfile @entity {
  id: ID!
  executedTransactions: [ExecuteTransaction!] @derivedFrom(field: "from")
}

type LogData @entity(immutable: true) {
  id: Bytes!
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnerWithdraw @entity(immutable: true) {
  id: Bytes!
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevertReason @entity(immutable: true) {
  id: Bytes!
  reason: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferAccount @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposit @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Payment @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}


type Withdraw @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
